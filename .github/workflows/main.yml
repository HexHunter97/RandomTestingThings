# flow:
# - check if version is existing version
# - if existing version, pull it, otherwise, pull latest
# - if latest, add tag
# - set version in appsettings.json
# - build docker image
# - update kubernetes deployment

# TODO:
# - check registry if exists
# - if exists, go to deploy

name: Deploy

on:
  pull_request_target:
    types:
      - closed
    branches:
      - master
  workflow_dispatch:
    inputs:
      version_number:
        description: Version number for the release
        required: false
        default: ''

jobs:
  checkTag:
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
    name: Tag check
    runs-on: self-hosted
    steps:
    - uses: mukunku/tag-exists-action@v1.0.0
      id: checkTag
      with: 
        tag: ${{ github.event.inputs.version_number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      existingVersion: ${{ steps.checkTag.outputs.exists }}

  pull:
    needs: checkTag
    name: Pull repository
    runs-on: self-hosted
    steps:
    - if: ${{ !!needs.checkTag.outputs.existingVersion }}
      name: Checkout with version
      uses: actions/checkout@v2.4.2
      with:
        ref: refs/tags/${{ github.event.inputs.version_number }}
    - if: ${{ !needs.checkTag.outputs.existingVersion }}
      name: Checkout without version
      uses: actions/checkout@v2.4.2
        
  bumpVersion:
    needs: pull
    name: Bump version
    runs-on: self-hosted
    steps:
    - if: ${{ github.event.inputs.version_number != '' && needs.checkTag.outputs.existingVersion }}
      id: manualVersion
      name: Manual version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ github.event.inputs.version_number }}
        tag_prefix: ''
    - if: ${{ github.event.inputs.version_number == '' }}
      id: autoVersion
      name: Automatic version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ''
        default_prerelease_bump: prepatch
        append_to_pre_release_tag: false
    outputs:
      version: ${{ steps.autoVersion.outputs.new_tag || steps.manualVersion.outputs.new_tag }}

  applyVersion:
    needs: bumpVersion
    name: Apply version
    runs-on: self-hosted
    steps:
    - name: Client appsettings.json
      run: "sed -ir 's/^  \"version\": \"local\"/  \"version\": \"${{ needs.bumpVersion.outputs.version }}\"/' ArmaReforger.WorkshopBrowser/Client/wwwroot/appsettings.json"

  build:
    needs: applyVersion
    name: Build image
    runs-on: self-hosted
    steps:
    - run: docker build -f Dockerfile . -t workshopbrowser:${{ needs.bumpVersion.outputs.version }}
  
  deploy:
    needs: build
    name: Deploy
    runs-on: self-hosted
    steps:
    - run: echo "TODO"
    # add image to kube!
